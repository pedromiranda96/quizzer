// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? //@db.Text
  access_token      String? //@db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? //@db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String       @id @default(cuid())
  name          String?
  email         String?      @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  quizzes       Quiz[]
  submissions   Submission[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Quiz {
  id          String       @id @default(cuid())
  title       String
  description String
  tags        String[]
  userId      String
  user        User         @relation(fields: [userId], references: [id])
  questions   Question[]
  submissions Submission[]
}

model Question {
  id                String             @id @default(cuid())
  text              String
  quizId            String
  quiz              Quiz               @relation(fields: [quizId], references: [id])
  answers           Answer[]
  submissionAnswers SubmissionAnswer[]
}

model Answer {
  id          String             @id @default(cuid())
  text        String
  correct     Boolean
  questionId  String
  question    Question           @relation(fields: [questionId], references: [id])
  submissions SubmissionAnswer[]
}

model Submission {
  id      String             @id @default(cuid())
  quizId  String
  quiz    Quiz               @relation(fields: [quizId], references: [id])
  userId  String
  user    User               @relation(fields: [userId], references: [id])
  answers SubmissionAnswer[]
}

model SubmissionAnswer {
  id           String     @id @default(cuid())
  submissionId String
  submission   Submission @relation(fields: [submissionId], references: [id])
  questionId   String
  question     Question   @relation(fields: [questionId], references: [id])
  answerId     String
  answer       Answer     @relation(fields: [answerId], references: [id])
}
